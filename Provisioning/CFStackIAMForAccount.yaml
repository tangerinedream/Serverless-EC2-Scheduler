AWSTemplateFormatVersion: "2010-09-09"
Description: >
  Stack creates Persistent Resources for Serverless-EC2-Scheduler.

Parameters:

  PathNamespace:
    Description: >
      The value to enter to assist in the namespacing for the created resources.
      Do not include leading nor trailing '/' symbols
    Type: String
    Default: serverless-ec2-scheduler

Outputs:
  CodePipelineServiceRole:
    Description: The role under which the CodePipeline for Serverless EC2 Scheduler is executed
    Value:
      !GetAtt CodePipelineServiceRole.Arn

    # No reason to Export IAM values as !Import only has access to whatever was Exported in that region.
    # According to AWS documenation: "You can't create cross-stack references across regions. You can use the intrinsic function Fn::ImportValue to import only values that have been exported within the same region."
#    Export:
#      Name: ServerlessEC2SchedulerCodePipelineServiceRole

  CodeBuildServiceRole:
    Description: The role under which the CodeBuild for Serverless EC2 Scheduler is built
    Value:
      !GetAtt CodeBuildServiceRole.Arn
    
#    Export:
#      Name: ServerlessEC2SchedulerCodeBuildServiceRole




Resources:
  # ------------------------------------------
  # Service Roles
  #   See: https://docs.aws.amazon.com/codepipeline/latest/userguide/tutorials-cloudformation-github.html
  # ------------------------------------------
  CodePipelineServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: !Join
            - ''
            - - '/'
              - !Ref PathNamespace
              - '/'
      Policies:
        - PolicyName: ServerlessEC2SchedulerCodePipelineServicePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'codedeploy:CreateDeployment'
                  - 'codedeploy:GetApplicationRevision'
                  - 'codedeploy:GetDeployment'
                  - 'codedeploy:GetDeploymentConfig'
                  - 'codedeploy:RegisterApplicationRevision'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'codebuild:BatchGetBuilds'
                  - 'codebuild:StartBuild'
                Resource: '*'

              - Effect: Allow
                Action:
                  - 'lambda:InvokeFunction'
                  - 'lambda:ListFunctions'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'iam:PassRole'
#                Resource: '*'
                Resource: !Join
                  - ''
                  - - !Sub 'arn:aws:iam::${AWS::AccountId}:role/'
                    - !Ref PathNamespace
                    - /*
              - Effect: Allow
                Action:
                  - 'cloudwatch:*'
                  - 's3:*'
                  - 'sns:*'
                  - 'cloudformation:*'
                Resource: '*'


  CodeBuildServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - codebuild.amazonaws.com
          Action: 'sts:AssumeRole'
      Path: !Join
        - ''
        - - '/'
          - !Ref PathNamespace
          - '/'
      Policies:
      - PolicyName: ServerlessEC2SchedulerCodeBuildServicePolicy
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
              - 'cloudwatch:*'
              - 's3:*'
              - 'sns:*'
              - 'cloudformation:*'
            Resource: '*'