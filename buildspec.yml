###
# Zips code and deploys Lambda function using SAM Template SAM.cf.yaml
##

version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.7
      
    commands:
      - echo " ===== Entered the [install] phase ====="
      # install dependencies for scheduler
      - echo "+++++ apt-get updating ++++++"
      - apt-get update -y

      - echo "+++++ installing python3-pip ++++++"
      - apt-get install -y python3-pip

      - echo "+++++ installing zip ++++++"
      - apt-get install -y zip

  pre_build:
    commands:
      - echo " ===== Entered the [pre_build] phase ====="
      - echo "Code source build directory is $CODEBUILD_SRC_DIR"
      - ls -l $CODEBUILD_SRC_DIR

      - echo "+++++ Creating build directory buildDir +++++"
      - mkdir buildDir


      - echo "+++++ Installing yaml module +++++"
      - pip3 install pyyaml -t buildDir

      - echo "+++++ Installing redo module in buildDir +++++"
      - pip3 install redo -t buildDir    

      - echo "+++++ Staging source python files to build directory +++++"
      - cp serverless/lambda/*.py buildDir

      - echo "+++++ Staging SAM.cf.yaml to build directory +++++"
      - cp SAM.cf.yaml buildDir

      - echo "+++++ Contents of build directory +++++"
      - ls -l buildDir

  build:

    commands:
      - echo "===== Entered the [build] phase ====="
      - echo "+++++ creating zip file scheduler-workloadproxy.zip +++++"
      - cd $CODEBUILD_SRC_DIR/buildDir
      - zip -r ./scheduler-workloadproxy.zip .  # zipping may not even be necessary, just point SAM.cf.yaml codeUri to buildDir

#      # Good zip reference: https://www.wpoven.com/tutorials/server/how-to-zip-or-unzip-files-and-folders-using-command-line-on-ubuntu-server
#      # zip -r command does not work how you think it does
#      - zip -r ../../buildDir/scheduler-workloadproxy.zip .


  post_build:
    commands:
      - cd $CODEBUILD_SRC_DIR/buildDir

      - echo "===== Entered the [post_build] phase ====="
      - echo "+++++ Transforming SAM to CF +++++"
      - aws cloudformation package --template-file SAM.cf.yaml --s3-bucket $S3_CODEBUILD_BUCKET --output-template-file packagedSAM.yaml --kms-key-id  $CODEBUILD_KMS_KEY_ID

      - echo "+++++ Deploying Scheduler-Workload-Stack +++++"
      - aws cloudformation deploy --region $AWS_DEFAULT_REGION --template-file packagedSAM.yaml --stack-name SchedulerEndpointStack --parameter-overrides RegionStackName=$REGION_STACK_NAME --capabilities CAPABILITY_IAM


